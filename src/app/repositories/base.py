from typing import Protocol, Iterable, Optional
from uuid import UUID


class TaskRepositoryProtocol(Protocol):
    async def create(self, data: dict) -> "Task": ...
    async def get(self, id: UUID) -> Optional["Task"]: ...
    async def list(self, limit: int = 100, offset: int = 0) -> Iterable["Task"]: ...
    async def update(self, id: UUID, data: dict) -> Optional["Task"]: ...
    async def delete(self, id: UUID) -> bool: ...
